---
import { cva } from "class-variance-authority";

const jobItem = cva(
	"ml-6",
	{
		variants: {
			period: {
				earliest: "",
				default: "mb-4"
			}
		}
	}
)

const accomplishmentItem = cva(
	"text-base font-normal text-slate-950",
	{
		variants: {
			itemPosition: {
				last: "",
				default: "mb-1"
			}
		}
	}
)

export interface Props {
	firstJob: boolean;
	title: string;
	company: string;
	location: string;
	startDate: string;
	endDate?: string;
	accomplishments: string[];
}

const { firstJob, title, company, location, startDate, endDate, accomplishments } = Astro.props;
---

<li class={jobItem({ period: firstJob ? "earliest" : "default" })}>            
	<span class="absolute flex items-center justify-center w-6 h-6 bg-indigo-200 rounded-full mt-1 -left-3.5 ring-8 ring-slate-200">
		<svg aria-hidden="true" class="w-4 h-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2v2h6V1h2v2ZM4 9v10h16V9H4Zm2 2h2v2H6v-2Zm5 0h2v2h-2v-2Zm5 0h2v2h-2v-2Z"/></svg>
	</span>
	<h3 class="flex items-center mb-0.5 text-lg font-bold">
		{title}
		{ !endDate && <span class="bg-indigo-200 text-indigo-600 text-sm px-2.5 py-0.5 rounded ml-3">Current</span> }
	</h3>
	<h4 class="mb-1 font-semibold">{company}, {location}</h4>
	<time class="block mb-2 text-sm font-normal leading-none text-slate-600">{startDate} - {endDate ? endDate : "Present"}</time>
	<ul class="list-disc list-outside ml-4">
		{accomplishments.map((accomplishment, index, {length}) => (
			<li class={accomplishmentItem({ itemPosition: length - 1 === index ? "last" :"default" })}>{accomplishment}</li>
		))}
	</ul>
</li>
